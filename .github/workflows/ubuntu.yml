name: Ubuntu CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_type: [Release]
        c_compiler: [gcc]
        cpp_compiler: [g++]
        cmake_version: [3.26.0]
        qt_ver: [5.14.1]
        qt_arch: [linux_gcc_64]

    env:
      build-output-dir: ${{ github.workspace }}/build
      targetName: recotans

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 1
    - name: Update submodules
      run: |
        git submodule update --init --recursive
        git submodule foreach git pull origin master

    - name: Install required dependencies
      run: sudo apt-get install -y libglew-dev libglfw3-dev libasound2-dev

    - name: set CUDA environment
      uses: Jimver/cuda-toolkit@v0.2.16
      id: cuda-toolkit
      with:
        cuda: '12.5.0'


    - name: Install Qt
      uses: jurplel/install-qt-action@v4.0.0
      with:
        version: ${{ matrix.qt_ver }}
        cached: false

    
    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v5
    
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: ${{ matrix.cmake_version }}
    
    - name: Set build output directory
      id: build-dir
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_ENV"
        echo "Cuda install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
        echo "export PATH=$PATH:${{steps.cuda-toolkit.outputs.CUDA_PATH}}/" >> $GITHUB_ENV


    - name: Use cmake
      run: |
        cmake --version
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}  -DGGML_CUDA:BOOL=ON -G Ninja -S . -B ${{ env.build-output-dir }}

    - name: Build with Ninja
      run: |
        cmake --build  ${{ env.build-output-dir }} --config ${{ matrix.build_type }} --target rtaudio -- -j 4
        cmake --build  ${{ env.build-output-dir }} --config ${{ matrix.build_type }} --target lyric -- -j 4
